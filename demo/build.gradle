plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'

    // Spring Boot Actuator (애플리케이션 상태 모니터링)
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // Micrometer Prometheus (Actuator 메트릭을 Prometheus에서 읽을 수 있도록 변환)
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // Micrometer Tracing (spring cloud sleuth 대체)
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'

    // Zipkin (Micrometer Tracing 데이터를 Zipkin으로 전송)
    implementation 'io.zipkin.reporter2:zipkin-reporter'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-graphql'


    // Lombok (선택 사항)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'

    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('buildReact', Exec) {
    workingDir = 'frontend'
    commandLine 'C:/Program Files/nodejs/npm.cmd', 'run', 'build'
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-Xlint:deprecation"
}

tasks.register('copyReactBuild', Copy) {
    dependsOn 'buildReact'  // 태스크 이름을 문자열로 지정
    from 'frontend/build'
    into 'src/main/resources/static'
}
tasks.named('processResources') {
    dependsOn 'copyReactBuild'
}

bootJar {
    dependsOn 'copyReactBuild'  // 태스크 이름을 문자열로 지정
}